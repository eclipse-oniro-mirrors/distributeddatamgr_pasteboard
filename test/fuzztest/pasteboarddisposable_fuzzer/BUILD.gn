# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/distributeddatamgr/pasteboard/pasteboard.gni")

import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("${pasteboard_tlv_path}/pasteboard_tlv.gni")

ohos_fuzztest("PasteboardDisposableFuzzTest") {
  module_out_path = "pasteboard/pasteboard"

  fuzz_config_file = "${pasteboard_root_path}/test/fuzztest/pasteboarddisposable_fuzzer"

  cflags = [
    "-g",
    "-O0",
    "-fno-omit-frame-pointer",
    "-fno-access-control",
  ]

  include_dirs = [
    "../mock/loader",
    "../mock/utils",
    "${pasteboard_framework_path}/include",
    "${pasteboard_innerkits_path}/include",
    "${pasteboard_service_path}/core/include",
    "${pasteboard_service_path}/dfx/src",
    "${pasteboard_service_path}/test/unittest/mock/access_token",
    "${pasteboard_tlv_path}",
    "${pasteboard_utils_path}/native/include",
  ]

  sources = [ "pasteboarddisposable_fuzzer.cpp" ]
  sources += [
    "${pasteboard_framework_path}/ffrt/ffrt_utils.cpp",
    "${pasteboard_framework_path}/permission/permission_utils.cpp",
    "${pasteboard_service_path}/core/src/pasteboard_disposable_manager.cpp",
    "${pasteboard_service_path}/test/unittest/mock/access_token/accesstoken_kit_virtual.cpp",    
  ]
  sources += [
    "${pasteboard_innerkits_path}/src/paste_data.cpp",
    "${pasteboard_innerkits_path}/src/paste_data_entry.cpp",
    "${pasteboard_innerkits_path}/src/paste_data_record.cpp",
    "${pasteboard_tlv_path}/tlv_readable.cpp",
    "${pasteboard_tlv_path}/tlv_utils.cpp",
    "${pasteboard_tlv_path}/tlv_writeable.cpp",
  ]

  deps = [ "${pasteboard_service_path}:pasteboard_service_idl" ]

  external_deps = [
    "ability_base:zuri",
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
    "udmf:udmf_client",
  ]
}

group("fuzztest") {
  testonly = true
  deps = [ ":PasteboardDisposableFuzzTest" ]
}
